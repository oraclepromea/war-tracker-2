version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: war-tracker-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-wartracker123}
      MONGO_INITDB_DATABASE: war-tracker
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - war-tracker-network

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: war-tracker-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-wartracker123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - war-tracker-network

  # War Tracker API & Frontend
  war-tracker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: war-tracker-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-wartracker123}@mongodb:27017/war-tracker?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-wartracker123}@redis:6379
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      NEWS_API_KEY: ${NEWS_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    networks:
      - war-tracker-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      timeout: 10s
      retries: 3
      start_period: 40s
      interval: 30s

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: war-tracker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - war-tracker
    networks:
      - war-tracker-network
    profiles:
      - production

  # Development Database (for local dev)
  mongodb-dev:
    image: mongo:7
    container_name: war-tracker-db-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: war-tracker-dev
    ports:
      - "27018:27017"
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - war-tracker-network
    profiles:
      - development

volumes:
  mongodb_data:
    driver: local
  mongodb_dev_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  war-tracker-network:
    driver: bridge